Individual chapters can be found below
All of them can be run together thus:

$ ./runall.sh
Run no: 0
111 111 111 111 111 111 111
111 111 111 011 110 011 110
011 110 011 110 011 110 011
Run no: 0
111 111 111 111 111
111 011 110 011 110
011 110 011 110 011
Completed test_example19a
  3,3   [  2,4   ]: 50.05 [ 1,5-up ]: 49.95
 1,5-up [1,5-down]: 49.68 [  0,6   ]: 50.32
1,5-down[  0,6   ]: 49.84 [ 1,5-up ]: 50.16
  2,4   [1,5-down]: 25.10 [  0,6   ]: 24.81 [ 1,5-up ]: 25.10 [2,4 loop]: 24.99
Completed test_example19b
Run no: 0
111 111 111 111
111 011 010 010
011 010 010 010
Run no: 0
111 111 111 111
111 111 010 010
011 010 010 010
Completed test_example19c
Completed test_example18a
Completed test_example18b
Run no: 0
000 101 111 111
000 010 010 010
000 010 010 010

Run no: 1
111 111 101 101
111 111 111 111
111 101 101 101

Run no: 2
111 111 101 111 101
010 011 010 011 010
111 000 011 000 011

Run no: 3
010 111 101 111 101 101
010 111 111 111 111 111
111 000 111 101 101 101
Completed test_example18c
Completed test_example16a
Completed test_example16b
Completed test_example15a
Completed test_example15b
Completed test_example14
Completed test_example13a
Completed test_example13b
Completed test_example13c
Completed test_example13d
Completed test_example13e
Completed test_example121
Completed test_example122
$


Individual chapters:

Chapter 1 Section 2 has two examples. Expected output:

$ php chap1.2.php
Completed test_example121
Completed test_example122
$


Chapter 1 Section 3 has five networks:

$ php chap1.3.php
Completed test_example13a
Completed test_example13b
Completed test_example13c
Completed test_example13d
Completed test_example13e
$


Chapter 1 Section 4 has two truth tables depending on if the
firing rule has been applied:

$ php chap1.4.php
Completed test_example14
$


Chapter 1.5 looks for a distributed representation of if a
3x3 grid shows a T or a H

$ php chap1.5.php
Completed test_example15a
Completed test_example15b
$


Chapter 1.6 adds another layer to the 1.5 network above to
obtain a localised representation of that T or H

$ php chap1.6.php
Completed test_example16a
Completed test_example16b
$


Chapter 1.8 adds presents a 3x3 network that tries to stabilise on
its taught sets. Note that the All 0 and All 1 runs stabilise properly;
the I and 1 run will stabilise on H, T, and often won't stabilise

$ php chap1.8.php
Completed test_example18a
Completed test_example18b
Run no: 0
000 101 111 111
000 010 010 010
000 010 010 010

Run no: 1
111 111 101 101
111 111 111 111
111 101 101 101

Run no: 2
111 111 101 111 111
010 010 010 010 010
111 000 010 010 010

Run no: 3
010 111 101 111 101 111
010 011 110 011 110 011
111 000 011 100 011 100
Completed test_example18c
$


Chapter 1.9 explores that the 3x3 network can get stuck in a cycle
and demonstrates that by claming a node to give a distinguishing
feature, that cycle can be resolved.
Figure 1.7b appears to be wrong, so the second test explores what
the probabilities and paths to the figure truly are. Also see the
./Errata/Figure1.7b/ directory

$ php chap1.9.php
Run no: 0
111 111 111 111 111
111 011 110 011 110
011 110 011 110 011
Run no: 0
111 111 111 111 111 111
111 111 110 011 110 011
011 110 011 110 011 110
Run no: 0
111 111 111 111 111
111 011 110 011 110
011 110 011 110 011
Completed test_example19a
  3,3   [  2,4   ]: 50.24 [ 1,5-up ]: 49.76
 1,5-up [1,5-down]: 50.14 [  0,6   ]: 49.86
1,5-down[  0,6   ]: 50.31 [ 1,5-up ]: 49.69
  2,4   [1,5-down]: 25.00 [  0,6   ]: 25.10 [ 1,5-up ]: 25.10 [2,4 loop]: 24.80
Completed test_example19b
Run no: 0
111 111 111 111 111 111
111 111 011 110 010 010
011 010 010 010 010 010
Run no: 0
111 111 111 111
111 011 010 010
011 010 010 010
Completed test_example19c
$
