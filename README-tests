Individual chapters can be found below
All of them can be run together thus:

$ ./runall.sh
Completed test_example18a
Completed test_example18b
Run no: 0
000 101 111 111
000 010 010 010
000 010 010 010

Run no: 1
111 111 101 101
111 111 111 111
111 101 101 101

Run no: 2
111 111 101 111 101 111
010 011 110 011 110 011
111 000 011 100 011 100

Run no: 3
010 111 101 111 101 111 101
010 111 110 011 110 011 110
111 000 111 100 011 100 011
Completed test_example18c
Completed test_example16a
Completed test_example16b
Completed test_example15a
Completed test_example15b
Completed test_example14
Completed test_example13a
Completed test_example13b
Completed test_example13c
Completed test_example13d
Completed test_example13e
Completed test_example121
Completed test_example122
$


Individual chapters:

Chapter 1 Section 2 has two examples. Expected output:

$ php chap1.2.php
Completed test_example121
Completed test_example122
$


Chapter 1 Section 3 has five networks:

$ php chap1.3.php
Completed test_example13a
Completed test_example13b
Completed test_example13c
Completed test_example13d
Completed test_example13e
$


Chapter 1 Section 4 has two truth tables depending on if the
firing rule has been applied:

$ php chap1.4.php
Completed test_example14
$


Chapter 1.5 looks for a distributed representation of if a
3x3 grid shows a T or a H

$ php chap1.5.php
Completed test_example15a
Completed test_example15b
$


Chapter 1.6 adds another layer to the 1.5 network above to
obtain a localised representation of that T or H

$ php chap1.6.php
Completed test_example16a
Completed test_example16b
$


Chapter 1.8 adds presents a 3x3 network that tries to stabilise on
its taught sets. Note that the All 0 and All 1 runs stabilise properly;
the I and 1 run will stabilise on H, T, and often won't stabilise

$ php chap1.8.php
Completed test_example18a
Completed test_example18b
Run no: 0
000 101 111 111
000 010 010 010
000 010 010 010

Run no: 1
111 111 101 101
111 111 111 111
111 101 101 101

Run no: 2
111 111 101 111 111
010 010 010 010 010
111 000 010 010 010

Run no: 3
010 111 101 111 101 111
010 011 110 011 110 011
111 000 011 100 011 100
Completed test_example18c
$
